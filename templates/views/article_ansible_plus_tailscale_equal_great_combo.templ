package views

import (
    "fmt"
	"github.com/ip812/blog/articles"
	"github.com/ip812/blog/templates"
	"github.com/ip812/blog/templates/components"
	"github.com/ip812/blog/templates/button"
	"github.com/ip812/blog/templates/code"
)

var ansiblePlusTailsclaleEqualGreatComboIDMetadata = articles.GetByID(articles.AnsiblePlusTailsclaleEqualGreatComboID)

templ ArticleAnsiblePlusTailscaleEqualGreatCombo() {
	@templates.Base() {
		<div class="flex flex-col min-h-screen justify-between w-full">
			<div class="flex flex-1 justify-center">
				<div class="mx-auto w-4/5 md:w-1/2 space-y-8 py-12 font-medium">
					<div class="mb-8 flex justify-center">
						@button.Button(button.Props{
							Href: "/p/public/articles",
						}) {
                            Go Back to Articles
						}
					</div>

					<header class="flex flex-col w-full justify-center items-center mb-2">
						<h1 class="text-3xl font-semibold leading-tight">{ ansiblePlusTailsclaleEqualGreatComboIDMetadata.Name }</h1>
					</header>
                    ref - https://chatgpt.com/c/68f2b0e3-f068-832d-bcb6-4f36360c93f6
				    <p class="my-0">
						So now let's deep dive into the setup.
                        The idea is that if a machine is added to out Tailscale network and if ssh access is enabled for that machine, Ansible should be able to connect to it, because Ansible uses SSH for connecting to remote hosts by using push model.
                        So in order to run Ansible every time we make a change to out configuration, we will add a GitHub Action workflow that will be triggered every time we push a change to our repository.
                        In order the Github Action runner to be able to connect to our Tailscale network, we will add the runner temporary to our Tailscale network by using Tailscale's GitHub Action.
					</p>

				    <p class="mt-4">
						The goal of this demo project is to configure 2 VMs on AWS to:
                        - Configure both VM with some basic utilitis like tmux, vim jq, etc.
                        - Install Docker on both VMs uisng Ansible's Docker plugins in galaxy.
                        - Run on one of the VMs 2 Nginx containers and on the other VM run 2 Traefik containers.
                        - Everything while the VM can't be accessed from the public internet, only via Tailscale.
					</p>
					<div class="mt-6">
						@code.Code(code.Props{
							Language:       "yaml",
							ShowCopyButton: true,
							Size:           code.SizeSm,
						}) {
							{ 
`package main
roles:
  - name: geerlingguy.docker
    version: 7.4.1

collections:
  - name: community.docker
    version: ">=3.0.0"
}` }
						}
					</div>

					<div class="mt-12">
						<h2 class="text-2xl font-bold mb-4">Comments</h2>
						<hr class="border-t-2 border-gray-300 mb-6"/>
                        @components.CommentInputForm(components.CommentInputFormProps{
                            ArticleID: articles.AnsiblePlusTailsclaleEqualGreatComboID,
                        })
                        <div 
                            id="comments"
                            hx-get={ fmt.Sprintf("/api/public/v0/articles/%d/comments", articles.AnsiblePlusTailsclaleEqualGreatComboID) }
		                    hx-target="#comments"
		                    hx-swap="innerHTML"
                            hx-trigger="load"
                        >
                            <div class="mt-4">
                                @templates.Spinner() {}
                            </div>
                        </div>
					</div>
				</div>
			</div>
			@templates.Footer()
		</div>
	}
}
